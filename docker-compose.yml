services:
  bot:
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    env_file:
      - .env
    environment:
      - PYTHONPATH="$(pwd)"
      - SELENIUM_REMOTE_URL=http://selenium:4444/wd/hub   # ðŸ†• Qoâ€˜shildi
    volumes:
      - ./media:/media
      - ./service:/service
      - ./static/cookie:/app/static/cookie
      - /dev/shm:/dev/shm     # Chromium uchun zarur
    ports:
      - "8443:8443"
      - "443:443"
      - "80:80"
    command: [ "sh", "-c", "./entrypoint.sh" ]
    networks:
      - bot_network
    depends_on:
      postgres:
        condition: service_healthy
      selenium:
        condition: service_started


  postgres:
    image: postgres:17
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bot_network
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # ðŸ†• --- Selenium + Chrome container qoâ€˜shildi ---
  selenium:
    image: seleniarm/standalone-chromium:latest  # Arm64 (Mac M1/M2), agar amd64 boâ€˜lsa, selenium/standalone-chrome:latest
    restart: always
    ports:
      - "4444:4444"
    shm_size: 2g
    networks:
      - bot_network

volumes:
  postgres_data:

networks:
  bot_network:
    driver: bridge
